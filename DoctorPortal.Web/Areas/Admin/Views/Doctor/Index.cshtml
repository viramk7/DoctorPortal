@using DoctorPortal.Web.Areas.Admin.Models
@using DoctorPortal.Web.Areas.Admin.Models.ViewModels
@using DoctorPortal.Web.Common
@using DoctorPortal.Web.Models
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Doctor";
}

@Html.Partial("_PageHeader", new PageHeaderViewModel("Doctors", "Doctor", "Index"))

<div class="content">
    <div class="row">
        <div class="col-md-12">

            @using (Html.BeginForm(new { @class = "form form-horizontal" }))
            {
                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">Manage Doctors</h5>
                    </div>
                    <hr />
                    <div class="card-body">

                        @(Html.Kendo().Grid<DoctorViewModel>()
                                       .Name("gridDoctors")
                                       .Columns(columns =>
                                       {
                                           columns.Command(command =>
                                           {
                                               command.Custom("Edit").Text("<span class='k-icon k-i-edit' title='Edit'></span>").HtmlAttributes(new { @style = "margin:2px" }).Click("onAddEdit");
                                               command.Custom("Delete").Text("<span class='k-icon k-i-close' title='Delete'></span>").HtmlAttributes(new { @style = "margin:2px;" }).Click("onDelete");
                                           }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                             .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                                           columns.Bound(d => d.Name);
                                           columns.Bound(d => d.Position);
                                           columns.Bound(d => d.ContactNo);
                                           columns.Bound(d => d.EmailAddress);
                                       })
                                       .ToolBar(toolbar =>
                                       {
                                           toolbar.Template("<a class='k-button k-button-icontext' onclick='onAddEdit(0)' href='javascript:void(0)'><span class='k-icon k-i-plus' title='Add'></span>Add</a> ");
                                       })
                                       
                                       .Pageable(x =>
                                       {
                                           x.Refresh(true);
                                           x.PageSizes(WebHelper.PageSizes);
                                       })
                                       .Sortable(sortable => sortable.AllowUnsort(false))
                                       .Filterable(filter => filter.Enabled(false))
                                       .NoRecords()
                                       .DataSource(dataSource => dataSource
                                           .Ajax()
                                           .ServerOperation(true)
                                           .PageSize(WebHelper.PageSize)
                                           .Model(model => model.Id(d => d.DoctorId))
                                           .Events(events => events.Error("onError('gridDoctors')").RequestEnd("onReqEnd"))
                                           .Read(read => read.Action("KendoRead", "Doctor"))
                                       ))

                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function onAddEdit(e) {
        var uri = '@Url.Action("AddEdit", "Doctor")';
        if (e != 0) {
            e.preventDefault();
            var tr = $(e.target).closest("tr");
            var data = this.dataItem(tr);
            if (data != null)
                uri += '?id=' + data.DoctorId;
        }
        window.location.href = uri;
    }

   

    function onDelete(e) {
        bootbox.confirm('Are you sure you want to delete this record?', function (result) {
            if (result) {
                e.preventDefault();
                var grid = $("#gridDoctors").data("kendoGrid");
                var tr = $(e.target).closest("tr");
                var data = grid.dataItem(tr);
                var url = '@Url.Action("Delete", "Doctor")';
                if (data != null)
                    callwebservice(url, 'id=' + data.DoctorId, DeleteComplete, false, datatypeEnum.text, typeEnum.post);
            }
        }, 'popup-confirmation');
    }

    function DeleteComplete(response) {
        var res = JSON.parse(response);
        if (res != null) {
            if (res.IsError == '@Convert.ToInt32(Enums.NotifyType.Error)') {
                ShowErrorMessage(res.Message, 'popup-error');
            } else {
                SucessMessage(res.Message);
                readKendoGrid('gridDoctors');
            }
        }
    }

    function onReqEnd(res) {
        if (res.type != 'read') {
            $("#gridDoctors").data("kendoGrid").dataSource.read();
        }
        DisplayResponseMessage(res);
    }
</script>

