@using DoctorPortal.Web.Areas.Admin.Models.ViewModels
@using DoctorPortal.Web.Common
@using DoctorPortal.Web.Models
@model DepartmentViewModel

@{
    ViewBag.Title = "Department";
}

@Html.Partial("_PageHeader", new PageHeaderViewModel("Department", "AdminHome", "Index"))

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <form action="" method="post" enctype="multipart/form-data">

                @Html.ValidationSummary(true)
                @Html.Partial("_ActionBar", new ActionBarViewModel("Department", displaySaveAndContinueButton: true))

                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">
                            Manage Department
                        </h5>
                    </div>

                    <hr />
                    <div class="card-body">
                        @Html.HiddenFor(m => m.DepartmentId)

                        @Html.HiddenFor(m => m.HospitalId)
                        <div class="row">

                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.DepartmentName, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.TextBoxFor(m => m.DepartmentName, new { @class = "k-textbox", style = "width: 100%;" })
                                        @Html.ValidationMessageFor(m => m.DepartmentName)
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label(" ", new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9" style="margin-top:15px;">
                                        @Html.Kendo().CheckBoxFor(m => m.IsActive)
                                        @Html.ValidationMessageFor(m => m.IsActive)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-lg-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Description, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-5 col-lg-10">
                                        @Html.TextAreaFor(m => m.Description, new { @class = "k-textbox", style = "width: 100%;", @rows = "10" })
                                        @Html.ValidationMessageFor(m => m.Description)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.HomePageIcon, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.TextBoxFor(m => m.HomePageIcon, new { @class = "k-textbox", style = "width: 100%;" })
                                        @Html.ValidationMessageFor(m => m.HomePageIcon)
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label("Upload Files", new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @(Html.Kendo().Upload().Name("files").Multiple(true)
                                                                                                      .Validation(validation => validation.AllowedExtensions(WebHelper.ValidImageFileTypes)))
                                        <p>
                                            <span class="text-muted">*Only @string.Join(", ", WebHelper.ValidImageFileTypes) allowed.</span>
                                        </p>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="card-body">
                        @if (Model.DepartmentId > 0)
                        {
                            @(Html.Kendo().Grid<DepartmentImageViewModel>()
                                                                                       .Name("gridImage")
                                                                                       .Columns(columns =>
                                                                                       {
                                                                                           columns.Command(command =>
                                                                                           {
                                                                                               command.Destroy().Text(" ");

                                                                                           }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                                                                             .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                                                                                           columns.Bound(d => d.ImageName).ClientTemplate("<img src='" + Url.Content("/Uploads/Department/") + "#=ImageName#' alt='#=ImageName #' Title='#=ImageName #' height='70' width='70' />"); ;
                                                                                           //columns.Bound(d => d.ImageName).ClientTemplate("<img src='"+ Url.Content("#=ImageName #") + "' alt='#=ImageName #' Title='#=ImageName #' height='70' width='70' />"); ;
                                                                                       })

                                                                                       .NoRecords()
                                                                                       .DataSource(dataSource => dataSource
                                                                                           .Ajax()
                                                                                           .ServerOperation(true)
                                                                                           .PageSize(WebHelper.PageSize)
                                                                                           .Model(model => model.Id(d => d.Id))
                                                                                           .Events(events => events.Error("onError('gridImage')"))
                                                                                           .Read(read => read.Action("KendoReadImage", "Department").Data("onAdditionalData"))
                                                                                           .Destroy(update => update.Action("KendoDestroyImage", "Department"))
                                                                                       ))
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
    function onAdditionalData(e) {
        return {
            departmentId: $('#DepartmentId').val()
        };
    }
</script>
