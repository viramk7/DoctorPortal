@using DoctorPortal.Web.Areas.Admin.Models
@{
    //success messages
    var successMessages = new List<string>();
    if (TempData[$"tmp.notifications.{Enums.NotifyType.Success}"] != null)
    {
        successMessages.AddRange(TempData[$"tmp.notifications.{Enums.NotifyType.Success}"] as IList<string>);
    }
    if (ViewData[$"tmp.notifications.{Enums.NotifyType.Success}"] != null)
    {
        successMessages.AddRange(ViewData[$"tmp.notifications.{Enums.NotifyType.Success}"] as IList<string>);
    }
    if (Session[$"tmp.notifications.{Enums.NotifyType.Success}"] != null)
    {
        successMessages.AddRange(Session[$"tmp.notifications.{Enums.NotifyType.Success}"] as IList<string>);
        Session[$"tmp.notifications.{Enums.NotifyType.Success}"] = null;
    }


    //error messages
    var errorMessages = new List<string>();
    if (TempData[$"tmp.notifications.{Enums.NotifyType.Error}"] != null)
    {
        errorMessages.AddRange(TempData[$"tmp.notifications.{Enums.NotifyType.Error}"] as IList<string>);
    }
    if (ViewData[$"tmp.notifications.{Enums.NotifyType.Error}"] != null)
    {
        errorMessages.AddRange(ViewData[$"tmp.notifications.{Enums.NotifyType.Error}"] as IList<string>);
    }
    if (Session[$"tmp.notifications.{Enums.NotifyType.Error}"] != null)
    {
        errorMessages.AddRange(Session[$"tmp.notifications.{Enums.NotifyType.Error}"] as IList<string>);
        Session[$"tmp.notifications.{Enums.NotifyType.Error}"] = null;
    }
}
@*<p>&nbsp;</p>*@
@foreach (var message in successMessages)
{
    <div class="success-notification alert alert-success" id="success-notification-div-for" style="display:block;">
        <button type="button" class="close">&times;</button>
        <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-success.png")" alt="success"/>
        <span>

            @Html.Raw(message)
            
            <script>
                debugger;
                $(window).load(function () {
                    $("#success-notification-div-for").slideDown();
                });
            </script>

        </span>
    </div>
}
@foreach (var message in errorMessages)
{
    <div class="error-notification alert alert-danger" id="error-notification-div-for" style="display:none;">
        <button type="button" class="close">&times;</button>
        <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-error.png")" alt="error"/>
        <span>
            @Html.Raw(message)
            <script>

                $(window).load(function () {
                    window.$("#error-notification-div-for").slideDown();
                });
            </script>

        </span>
    </div>
}
<div class="success-notification alert alert-success" id="success-notification-div" style="display:none;">
    <button type="button" class="close">&times;</button>
    <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-success.png")" alt="success"/>
    <span id="successmsg">
    </span>
</div>
<div class="error-notification alert alert-danger" id="error-notification-div" style="display:none;">
    <button type="button" class="close closeErrormsg">&times;</button>
    <img id="imgJobApplyMsg" src="@Url.Content("~/Content/images/ic-error.png")" alt="error"/>
    <span id="errormsg">
    </span>
</div>

@*<script>
    $(document).load(function () {
        debugger;
        setTimeout(function () {
            clearMessages();
        }, 6000);
    });

    function ShowSuccessMessage(message) {
        clearMessages();//clear message
        i = 0;
        $("#success-notification-div").slideDown();
        $("#successmsg").text(message);
        setTimeout(function () {
            clearMessages();
        }, 6000);
    }
    function ShowErrorMessage(message) {
        clearMessages();//clear message
        j = 0;
        $("#error-notification-div").slideDown();
        $("#errormsg").text(message);
        setTimeout(function () {
            clearMessages();
        }, 6000);
    }
    function clearMessages() {
        $("#success-notification-div").slideUp();
        $("#error-notification-div").slideUp();
        $("#success-notification-div-for").slideUp();
        $("#error-notification-div-for").slideUp();
    }
    function ShowErrorMessagePopUp(message) {
        clearMessages();//clear message
        j = 0;
        $(".popUp #error-notification-div").show();
        $(".popUp #errormsg").text(message);

    }
    function ShowSuccessMessagePopUp(message) {
        clearMessages();//clear message
        i = 0;
        $(".popUp #success-notification-div").show();
        $(".popUp #successmsg").text(message);
    }

    function DisplayResponseMessage(para)
    {

        if (para.type!='read' && para.response !=undefined  && para.response.Message != undefined ) {
            if ( para.response.IsError == '@System.Convert.ToInt32(Enums.NotifyType.Error)') {
                ShowErrorMessage(para.response.Message);
            }
            else {
                ShowSuccessMessage(para.response.Message);
            }
        }
    }

    function DisplayResponseMessageForAjax(data) {
        if (data != undefined) {
            if (data.IsError == '@System.Convert.ToInt32(Enums.NotifyType.Error)') {
                ShowErrorMessage(data.Message);
            }
            else {
                ShowSuccessMessage(data.Message);
            }
        }
    }

    $(document).ready(function () {
        debugger;
         $('.closeErrormsg').click(function () { $(".error-notification").fadeOut(10); });
        $('.closeSuccess').click(function () { $(".success-notification").fadeOut(10); });
    });
</script>*@
